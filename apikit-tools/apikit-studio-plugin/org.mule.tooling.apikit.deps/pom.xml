<?xml version="1.0" encoding="UTF-8"?>
<project
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
        xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.mule.tools</groupId>
        <artifactId>apikit-studio-plugin</artifactId>
        <version>1.1.0-SNAPSHOT</version>
    </parent>
    <groupId>org.mule.tools</groupId>
    <artifactId>org.mule.tooling.apikit.deps</artifactId>
    <packaging>eclipse-plugin</packaging>
    <properties>
        <lib-dir>lib</lib-dir>
    </properties>

    <description>This pom exists because of the limitation on including
        dependencies when building with Tycho.
        The maven-dependency-plugin allows us to copy artifacts to a directory,
        but in order to get the transitive
        dependencies of a given artifact, we have to execute the copy-dependencies mojo,
        which has one pitfall:
        it won't act on a specified dependency, instead, it will act on THE
        PROJECT's dependencies. That's why, we
        need this project.
    </description>

    <dependencies>
        <dependency>
            <groupId>org.mule.tools</groupId>
            <artifactId>apikit-maven-plugin</artifactId>
            <version>${apikit.version}</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
				<artifactId>maven-invoker-plugin</artifactId>
				<version>1.7</version>
				<configuration>
				</configuration>
				<executions>
					<execution>
						<id>download-dependencies</id>
						<goals>
							<goal>run</goal>
						</goals>
						<phase>validate</phase>
						<configuration>
							<pom>dependenciesPom.xml</pom>
							<goals>
								<goal>validate</goal>
							</goals>
							<streamLogs>true</streamLogs>
						</configuration>
					</execution>
				</executions>
			</plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>mulesoft-snapshots</id>
            <name>MuleSoft Snapshots Repository</name>
            <url>http://repository.mulesoft.org/snapshots/</url>
            <layout>default</layout>
        </repository>
        <repository>
            <id>mulesoft-releases</id>
            <name>MuleSoft Releases Repository</name>
            <url>http://repository.mulesoft.org/releases/</url>
            <layout>default</layout>
        </repository>
    </repositories>
</project>