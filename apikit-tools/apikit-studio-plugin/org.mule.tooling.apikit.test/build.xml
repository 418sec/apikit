<?xml version="1.0" encoding="UTF-8" ?>

<project name="testsuite" default="run" basedir=".">
    <property name="home" value="${basedir}/target/StudioAutomation" />
    <property name="eclipse-home" value="${home}/MuleStudio" />
    <property name="studio-download-page-linux" value="http://mule-studio-releases.s3.amazonaws.com/3.5.0-BIGHORN/MuleStudio-for-linux-64bit-3.5.0-201310031601.tar.gz" />
       <property name="studio-download-page-mac" value="http://mule-studio-rcs.s3.amazonaws.com/3.5.0-BH-RC4/MuleStudio-for-macosx-64bit-3.5.0-201309301829.zip" />
    <property name="plugin-name" value="org.mule.tooling.apikit.test" />
    <property name="test-classname" value="org.mule.tooling.apikit.test.AllTests" />
    <property name="library-file" value="${eclipse-home}/plugins/org.eclipse.swtbot.eclipse.junit.headless/library.xml" />
    <property name="temp-workspace" value="workspace-test" />
    <property name="tests-jar" value="${basedir}/target/"/>
    <target name="run" depends="suite,cleanup"/>

    <target name="runStudio" depends="detectOS,installSWTBotPlugins,installAPIkitPlugin,copyTestsJar,suite,cleanup"/>
    <target name="runAll" depends="detectOS,downloadStudio,installSWTBotPlugins,installAPIkitPlugin,copyTestsJar,suite,cleanup"/>

    <target name="conditionOS">
        <condition property="isUnixButNotMacOsX">
            <and>
                <os family="unix"/>
                <not>
                  <os family="mac"/>
                </not>
            </and> 
        </condition>
      
    </target>

    <target name="displaymac" depends="conditionOS" unless="isUnixButNotMacOsX">
            <echo message="OS detected: mac"/>
    </target>
    <target name="displaylinux" depends="conditionOS" if="isUnixButNotMacOsX">
          <echo message="OS detected: Linux"/>
    </target>
    <target name="detectOS" depends="displaymac,displaylinux"/>

    <target name="downloadStudioMac" depends="conditionOS" unless="isUnixButNotMacOsX">
            <mkdir dir="${home}"/>
            <!--get src="${studio-download-page-mac}" dest="${home}/MuleStudio.zip"/-->
            <copy file="${home}/../../../MuleStudio.zip" todir="${home}" />
            <unzip src="${home}/MuleStudio.zip" dest="${home}" overwrite="true"/>
    </target>

    <target name="downloadStudioLinux" depends="conditionOS" if="isUnixButNotMacOsX">
        <mkdir dir="${home}"/>
        <get src="${studio-download-page-linux}" dest="${home}/MuleStudio.tar.gz"/>
        <!--copy file="${home}/../../MuleStudio.tar.gz" todir="${home}" /-->
        <gunzip src="${home}/MuleStudio.tar.gz" dest="${home}"/>
        <untar src="${home}/MuleStudio.tar" dest="${home}" overwrite="true"/>
    </target>

    <target name="downloadStudio" depends="downloadStudioLinux,downloadStudioMac"/>

    <target name="installSWTBotPlugins">
        <echo message="org.eclipse.equinox.launcher will be searched at: ${eclipse-home}/plugins/org.eclipse.equinox.launcher_1.3.0.v20120522-1813.jar"/>
         <java jar="${eclipse-home}/plugins/org.eclipse.equinox.launcher_1.3.0.v20120522-1813.jar" fork="true">
            <arg line="-application org.eclipse.equinox.p2.director -consolelog -repository http://download.eclipse.org/technology/swtbot/releases/latest/ -installIU org.eclipse.swtbot.eclipse.test.junit.feature.group -installIU org.eclipse.swtbot.forms.feature.group -installIU org.eclipse.swtbot.forms.feature.group -installIU org.eclipse.swtbot.eclipse.feature.group -installIU org.eclipse.swtbot.eclipse.gef.feature.group -installIU org.eclipse.swtbot.feature.group -installIU org.eclipse.swtbot.eclipse.test.junit.feature.group -installIU org.eclipse.swtbot.generator.feature.feature.group -installIU org.eclipse.swtbot.ide.feature.group -installIU org.eclipse.swtbot.source.feature.group -installIU org.eclipse.swtbot.generator.feature.source.feature.group -installIU org.eclipse.swtbot.forms.source.feature.group -installIU org.eclipse.swtbot.ide.source.feature.group -installIU org.eclipse.swtbot.eclipse.gef.source.feature.group -installIU org.eclipse.swtbot.eclipse.source.feature.group -installIU org.apache.log4j.source -installIU org.apache.log4j -installIU org.hamcrest.core -installIU org.hamcrest.library -installIU org.hamcrest.library.source -installIU org.hamcrest.core.source"/>
        </java>
    </target>

    <target name="installAPIkitPlugin">
        <echo message="org.eclipse.equinox.launcher will be searched at: ${eclipse-home}/plugins/org.eclipse.equinox.launcher_1.3.0.v20120522-1813.jar"/>
        <java jar="${eclipse-home}/plugins/org.eclipse.equinox.launcher_1.3.0.v20120522-1813.jar" fork="true">
            <arg line="-application org.eclipse.equinox.p2.director -consolelog -repository https://corp.bamboo.mulesource.com/browse/MODULES-WSAPI/latestSuccessful/artifact/shared/update-site -installIU org.mule.tooling.apikit.feature.feature.group"/>
        </java>
    </target>

    <target name="unzipHeadlessJar">
        <unzip dest="${eclipse-home}/plugins/org.eclipse.swtbot.eclipse.junit.headless" overwrite="true">
            <fileset dir="${eclipse-home}/plugins/" includes="org.eclipse.swtbot.eclipse.junit.headless*.jar" />
        </unzip>
        <replace file="${library-file}" token="org.eclipse.swtbot.eclipse.junit4.headless.swtbottestapplication" value="org.eclipse.swtbot.eclipse.junit.headless.swtbottestapplication"/>
    </target>



    <target name="copyTestsJar">
        <copy todir="${eclipse-home}/plugins">
            <fileset dir="${tests-jar}" includes="org.mule.tooling.apikit.test*"/>
        </copy>
    </target>

    <target name="suite-linux" depends="unzipHeadlessJar" >
        <property name="jvmOption" value=""></property>
        <delete dir="${eclipse-home}/${temp-workspace}" quiet="false" />
 
        <ant target="swtbot-test" antfile="${library-file}" dir="${eclipse-home}">
            <property name="data-dir" value="${temp-workspace}" />
            <property name="plugin-name" value="${plugin-name}" />
            <property name="os" value="linux" />
            <property name="ws" value="gtk" />
            <property name="arch" value="x86_64" />
            <property name="classname" value="${test-classname}" />
            <property name="vmargs" value=" -Xms384m -Xmx768m -XX:MaxPermSize=384m -Dosgi.instance.area.default=${eclipse-home}/${temp-workspace} -Dorg.eclipse.swt.internal.carbon.smallFonts" />
        </ant>
    </target>

    <target name="suite-mac" depends="conditionOS" if="isUnixButNotMacOsX">      
        <condition property="jvmOption" value="-XstartOnFirstThread -Dorg.eclipse.swt.internal.carbon.smallFonts">
           <os family="mac"/>
        </condition>
        <property name="jvmOption" value=""></property>
        <delete dir="${eclipse-home}/${temp-workspace}" quiet="false" />
    
        <ant target="swtbot-test" antfile="${library-file}" dir="${eclipse-home}">
            <property name="data-dir" value="${temp-workspace}" />
            <property name="plugin-name" value="${plugin-name}" />
            <property name="os" value="macosx" />
            <property name="ws" value="cocoa" />
            <property name="arch" value="x86_64" />
            <property name="classname" value="${test-classname}" />
            <!--property name="vmargs" value="-Xms384m -Xmx768m -XX:MaxPermSize=384m -Dosgi.instance.area.default=@user.home/MuleStudio/workspace -XstartOnFirstThread -Dorg.eclipse.swt.internal.carbon.smallFonts" /-->
            <property name="vmargs" value=" -Xms384m -Xmx768m -XX:MaxPermSize=384m -Dosgi.instance.area.default=${eclipse-home}/${temp-workspace} -XstartOnFirstThread -Dorg.eclipse.swt.internal.carbon.smallFonts" />
        </ant>
    </target>

    <target name="suite" depends="unzipHeadlessJar,suite-linux,suite-mac" />

    <target name="cleanup" >
        <delete includeEmptyDirs="true">
            <fileset dir="${eclipse-home}/${temp-workspace}"/>
        </delete>
    </target>
</project>