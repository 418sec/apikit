<?xml version="1.0" encoding="UTF-8" ?>

<project name="testsuite" default="run" basedir=".">
    <property name="home" value="${basedir}/StudioAutomation" />
    <property name="eclipse-home" value="${home}/MuleStudio" />
    <property name="studio-download-page" value="http://mule-studio-rcs.s3.amazonaws.com/3.5.0-BH-RC4/MuleStudio-for-macosx-64bit-3.5.0-201309301829.zip" />
    <property name="plugin-name" value="org.mule.tooling.apikit.test" />
    <property name="test-classname" value="org.mule.tooling.apikit.test.AllTests" />
    <property name="library-file" value="${eclipse-home}/plugins/org.eclipse.swtbot.eclipse.junit.headless_2.1.1.201307101628/library.xml" />
    <property name="temp-workspace" value="./workspace-test" />
    <!--property name="tests-jar" value="./apikit-testing/apikit-tools/apikit-studio-plugin/org.mule.tooling.apikit.test/target/"/-->
    <property name="tests-jar" value="./Documents/apikit-testing/apikit-tools/apikit-studio-plugin/org.mule.tooling.apikit.test/target/"/>
    <target name="run" depends="suite,cleanup"/>

    <target name="runStudio" depends="installSWTBotPlugins,installAPIkitPlugin,copyTestsJar,suite,cleanup"/>

    <target name="runAll" depends="downloadStudio,installSWTBotPlugins,installAPIkitPlugin,copyTestsJar,suite,cleanup"/>

    <target name="downloadStudio">
        <mkdir dir="${home}"/>
        <!--get src="${studio-download-page}" dest="${home}/MuleStudio.zip"/-->
        <unzip src="${home}/MuleStudio.zip" dest="${home}" overwrite="true"/>
    </target>

    <target name="installSWTBotPlugins">
         <java jar="${eclipse-home}/plugins/org.eclipse.equinox.launcher_1.3.0.v20120522-1813.jar" fork="true">
            <arg line="-application org.eclipse.equinox.p2.director -consolelog -repository http://download.eclipse.org/technology/swtbot/releases/latest/ -installIU org.eclipse.swtbot.eclipse.test.junit.feature.group -installIU org.eclipse.swtbot.forms.feature.group -installIU org.eclipse.swtbot.forms.feature.group -installIU org.eclipse.swtbot.eclipse.feature.group -installIU org.eclipse.swtbot.eclipse.gef.feature.group -installIU org.eclipse.swtbot.feature.group -installIU org.eclipse.swtbot.eclipse.test.junit.feature.group -installIU org.eclipse.swtbot.generator.feature.feature.group -installIU org.eclipse.swtbot.ide.feature.group -installIU org.eclipse.swtbot.source.feature.group -installIU org.eclipse.swtbot.generator.feature.source.feature.group -installIU org.eclipse.swtbot.forms.source.feature.group -installIU org.eclipse.swtbot.ide.source.feature.group -installIU org.eclipse.swtbot.eclipse.gef.source.feature.group -installIU org.eclipse.swtbot.eclipse.source.feature.group -installIU org.apache.log4j.source -installIU org.apache.log4j -installIU org.hamcrest.core -installIU org.hamcrest.library -installIU org.hamcrest.library.source -installIU org.hamcrest.core.source"/>
        </java>
    </target>

    <target name="installAPIkitPlugin">
        <java jar="${eclipse-home}/plugins/org.eclipse.equinox.launcher_1.3.0.v20120522-1813.jar" fork="true">
            <arg line="-application org.eclipse.equinox.p2.director -consolelog -repository https://corp.bamboo.mulesource.com/browse/MODULES-WSAPI/latestSuccessful/artifact/shared/update-site -installIU org.mule.tooling.apikit.feature.feature.group"/>
        </java>
    </target>


    <target name="unzipHeadlessJar">

        <!--pathconvert property="file.list" >
            <map from="${eclipse-home}/plugins/" to=""/>
    
            <fileset dir="${eclipse-home}/plugins/">
                <include name="org.eclipse.swtbot.eclipse.junit.headless*"/>
            </fileset>
        </pathconvert>

        <loadresource property="file.name">
            <string value="${file.list}"/>
            <filterchain>
                <headfilter lines="1"/>
            </filterchain>
        </loadresource>
  

        <property name="jarName" value="${file.name}"/>
        <property name="folderName" value="${file.name}"/-->
  
      <first id="first">
            <fileset dir="${eclipse-home}/plugins/" includes="org.eclipse.swtbot.eclipse.junit.headless*.jar" />
        </first>
        <echo message="${toString:first}" />

        <property name="jarName" value="${toString:first}"/>
        <property name="folderName" value="${toString:first}"/>

        <script language="javascript">
            var before = project.getProperty("jarName");
            project.setProperty("folderName", before.replaceAll(".jar", ""));
        </script>
        
        <unzip src="${eclipse-home}/plugins/${jarName}" dest="${eclipse-home}/plugins/${folderName}" overwrite="true"/>
         <script language="javascript">
            var eclipsehome = project.getProperty("eclipse-home");
            var folderName = project.getProperty("folderName");
            project.setProperty("library-file", eclipsehome + "/plugins/" + folderName +"/library.xml");
        </script>

        <replace file="${eclipse-home}/plugins/${folderName}/library.xml" token="org.eclipse.swtbot.eclipse.junit4.headless.swtbottestapplication" value="org.eclipse.swtbot.eclipse.junit.headless.swtbottestapplication"/>
    </target>

    <target name="copyTestsJar">
        <copy todir="${eclipse-home}/plugins">
            <fileset dir="${tests-jar}" includes="org.mule.tooling.apikit.test*"/>
        </copy>
    </target>

    <target name="suite" depends="unzipHeadlessJar" >
    	<condition property="jvmOption" value="-XstartOnFirstThread -Dorg.eclipse.swt.internal.carbon.smallFonts">
    	   <os family="mac"/>
    	</condition>
        <property name="jvmOption" value=""></property>
        <delete dir="${eclipse-home}/${temp-workspace}" quiet="false" />
    
        <ant target="swtbot-test" antfile="${library-file}" dir="${eclipse-home}">
            <property name="data-dir" value="${temp-workspace}" />
            <property name="plugin-name" value="${plugin-name}" />
            <property name="os" value="macosx" />
            <property name="ws" value="cocoa" />
            <property name="arch" value="x86_64" />
            <property name="classname" value="${test-classname}" />
            <!--property name="vmargs" value="-Xms384m -Xmx768m -XX:MaxPermSize=384m -Dosgi.instance.area.default=@user.home/MuleStudio/workspace -XstartOnFirstThread -Dorg.eclipse.swt.internal.carbon.smallFonts" /-->
            <property name="vmargs" value=" -Xms384m -Xmx768m -XX:MaxPermSize=384m -Dosgi.instance.area.default=${eclipse-home}/${temp-workspace} -XstartOnFirstThread -Dorg.eclipse.swt.internal.carbon.smallFonts" />
        </ant>
    </target>

    <target name="cleanup" >
        <delete includeEmptyDirs="true">
            <fileset dir="${eclipse-home}/${temp-workspace}"/>
        </delete>
    </target>

<!--target name="devmode" depends="" description="Run development mode">
     <mkdir dir="war"/>
    <java fork="true" classname="com.google.gwt.dev.DevMode" dir="${basedir}/war" spawn="true">
        <classpath>
            <pathelement location="src" />
            <path refid="project.class.path" />
            <path refid="tools.class.path" />
        </classpath>
        <jvmarg value="-Xmx512M" />
        <jvmarg value="-javaagent:${appengine.folder}/lib/agent/appengine-agent.jar" />
        <jvmarg value="-Duser.dir=${basedir}/war" />
        <arg line="-war" />
        <arg value="${basedir}/war" />
        <arg line="-logLevel" />
        <arg value="INFO" />
        <arg value="-server" />
        <arg value="com.google.appengine.tools.development.gwt.AppEngineLauncher" />
        <arg value="net.bookedin.bam.BAM" />
    </java>
</target-->


</project>