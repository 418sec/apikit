<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
        http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
        http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">


    <apikit:mapping-exception-strategy name="Global_Mapping_Exception_Strategy">
        <apikit:mapping statusCode="404">
            <apikit:exception value="apikit2.exception.NotFoundException"/>
            <set-payload value="resource not found"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="apikit2.exception.MethodNotAllowedException"/>
            <set-payload value="method not allowed"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="apikit2.exception.UnsupportedMediaTypeException"/>
            <set-payload value="unsupported media type"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="apikit2.exception.NotAcceptableException"/>
            <set-payload value="not acceptable"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="apikit2.exception.BadRequestException"/>
            <set-payload value="bad request"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>

    <apikit:config raml="twilio/twilio-2010-04-01.yml"/>

    <flow name="doorway">
        <http:inbound-endpoint port="${serverPort}" host="localhost" path="2010-04-01">
            <object-to-string-transformer/>
        </http:inbound-endpoint>
        <apikit:rest-processor/>
        <exception-strategy ref="Global_Mapping_Exception_Strategy"/>
    </flow>

    <flow name="get:/Accounts">
        <set-payload value="#[registry:list-of-accounts]"/>
    </flow>

    <flow name="get:/Accounts/{AccountSid}">
        <logger level="WARN" message="Sid: #[AccountSid]"/>
        <choice>
            <when expression="#[app.registry['list-of-accounts'].getAccount(AccountSid)]">
                <set-payload value="#[app.registry['list-of-accounts'].getAccount(AccountSid)]"/>
            </when>
            <otherwise>
                <set-property propertyName="http.status" value="404"/>
            </otherwise>
        </choice>
    </flow>

    <spring:beans>
        <spring:bean id="account1" class="twilio.Account">
            <spring:property name="friendly_name" value="account 1"/>
            <spring:property name="sid" value="001"/>
            <spring:property name="status" value="active"/>
            <spring:property name="type" value="CE"/>
            <spring:property name="date_created" value="2010-09-21"/>
            <spring:property name="date_updated" value="2013-06-04"/>
            <!--
            <spring:property name="messages">
                <spring:list>
                    <spring:ref bean="message-1-1"/>
                    <spring:ref bean="message-1-2"/>
                </spring:list>
            </spring:property>
            -->
        </spring:bean>
        <spring:bean id="account2" class="twilio.Account">
            <spring:property name="friendly_name" value="account 2"/>
            <spring:property name="sid" value="002"/>
            <spring:property name="status" value="active"/>
            <spring:property name="type" value="EE"/>
            <spring:property name="date_created" value="2013-01-06"/>
            <spring:property name="date_updated" value="2013-07-02"/>
            <!--
            <spring:property name="messages">
                <spring:list>
                    <spring:ref bean="message-2-1"/>
                    <spring:ref bean="message-2-2"/>
                </spring:list>
            </spring:property>
            -->
        </spring:bean>
        <spring:bean id="list-of-accounts" class="twilio.Accounts">
            <spring:property name="accounts">
                <spring:list>
                    <spring:ref bean="account1"/>
                    <spring:ref bean="account2"/>
                </spring:list>
            </spring:property>
        </spring:bean>
    </spring:beans>

</mule>
